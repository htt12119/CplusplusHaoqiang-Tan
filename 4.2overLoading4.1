/*改写例4.1，对运算符“+”实行重载，使之能用于两个复数相加。
*/
#include <iostream>

using namespace std;

class Complex                       //定义Complex类
{
    public:
    Complex(){real = 0;imag = 0;}   //定义构造函数
    Complex(double r,double i){real = r;imag = i;}  //构造函数重载
    Complex operator + (Complex &c2);   //声明复数相加函数
    void display();                 //声明输出函数
    private:
        double real;    //实部
        double imag;   //虚部
};

Complex Complex::operator+(Complex &c2)   //定义复数相加函数
{
    Complex c;
    c.real = real + c2.real;
    c.imag = imag + c2.imag;
    return c;
}

void Complex::display()             //定义输出函数
{
    cout<<"("<<real<<","<<imag<<"i)"<<endl;
}

int main()
{
    Complex c1(3,4),c2(5,-10),c3;   //定义3个复数对象
    c3 = c1 + c2;
    cout<<"c1 = ";
    c1.display();
    cout<<"c2 =";
    c2.display();
    cout<<"c1 + c2 = ";
    c3.display();
    return 0;
}
